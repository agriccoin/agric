using AGRIC.Application.Entity.AGRIC;
using AGRIC.Application.Business.AGRIC;
using AGRIC.Util;
using AGRIC.Util.WebControl;
using System.Web.Mvc;
using System;
using System.Net;
using System.Text;
using System.IO;
using AGRIC.Application.Entity;
using System.Collections.Generic;
using System.Linq;
using AGRIC.Util.Extension;
using AGRIC.Application.Code;

namespace AGRIC.Application.Web.Areas.AGRIC.Controllers
{
    /// <summary>
    /// Name: PublicControl
    /// Author: 超级管理员
    /// Date: 2018-04-11 15:36
    /// Company: 2012-2018 AGRICsoft ningbo co.ltd
    /// Description: 公共接口
    /// </summary>
    public class UserController : MvcControllerBase
    {
        /// <summary>
        /// 用户注册
        /// </summary>
        /// <param name="Mobil">手机号码</param>
        /// <param name="Code">验证码</param>
        /// <param name="IsCandy">是否从糖果空投注册</param>
        /// <param name="EnCode">推广码</param>
        /// <param name="CandyNo">赠送糖果数量</param>
        /// <returns></returns>
        public ActionResult Registe(string Mobil, string Code,bool IsCandy=true, string EnCode="", int CandyNo=500)
        {
            return new UserBLL().Registe(Mobil,Code,IsCandy,EnCode,CandyNo);
        }


        /// <summary>
        /// 保存用户表单
        /// </summary>
        /// <param name="keyValue">主键值</param>
        /// <param name="userEntity">用户实体</param>
        /// <returns></returns>
        public ActionResult UpdateInfo(string keyValue, string userEntity)
        {
            return ToJsonResult(new UserBLL().UpdateInfo(keyValue,userEntity));
        }
        /// <summary>
        /// 用户实体 
        /// </summary>
        /// <param name="keyValue">主键值</param>
        /// <returns>返回对象Json</returns>
        public ActionResult GetUserInfo(string keyValue)
        {
            var data = new UserBLL().GetEntity(keyValue);
            return Content(data.ToJson());
        }
        /// <summary>
        /// 设置密码
        /// </summary>
        /// <param name="keyValue">主键值</param>
        /// <param name="Password">新密码</param>
        /// <returns></returns>
        public ActionResult SaveRevisePassword(string keyValue, string Password)
        {
             new UserBLL().RevisePassword(keyValue, Password);

            return Success("密码设置成功，请牢记新密码。");
        }
        /// <summary>
        /// 找回密码
        /// </summary>
        /// <param name="Mobile">手机号</param>
        /// <param name="Password">新密码</param>
        /// <returns></returns>
        public ActionResult ResetPsw(string Mobile, string Password)
        {
            new UserBLL().RevisePassword(Mobile, Password);

            return Success("密码设置成功，请牢记新密码。");
        }
        /// <summary>
        /// 生成推广码
        /// </summary>
        /// <returns></returns>
        public string GetEnCode(string Mobile)
        {
            return new UserBLL().CreateEnCode(Mobile);
        }
        /// <summary>
        /// 登录验证
        /// </summary>
        /// <param name="username">用户名</param>
        /// <param name="password">密码</param>
        /// <param name="verifycode">验证码</param>
        /// <param name="autologin">下次自动登录</param>
        /// <returns></returns>
        public ActionResult CheckLogin(string username, string password, string vcode, string googlecode)
        {
            try
            {
                    var userEntity = new UserBLL().CheckLogin(username, password);
                    return ToJsonResult(userEntity);
                return Error("用户名不能为空！");
            }
            catch (Exception ex)
            {

                return Error(ex.Message);
            }
        }
        /// <summary>
        /// 签到
        /// </summary>
        /// <param name="UserId"></param>
        /// <returns></returns>
        public ActionResult CheckIn(string UserId)
        {
           return ToJsonResult(new UserBLL().CheckIn(UserId));
        }
        /// <summary>
        /// 获取签到信息
        /// </summary>
        /// <param name="UserId"></param>
        /// <returns></returns>
        public ActionResult GetCheckIn(string UserId)
        {
           return ToJsonResult(new UserBLL().GetCheckIn(UserId));
        }
        /// <summary>
        /// 推广人用户信息
        /// </summary>
        /// <param name="UserId"></param>
        /// <returns></returns>
        public ActionResult InviteInfo(string UserId)
        {
            return ToJsonResult(new UserBLL().InviteInfo(UserId));
           
        }

    }
}
